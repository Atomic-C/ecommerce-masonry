@model ecommerce_masonry.Models.ViewModels.ProductViewModel


@{ var title = "Create Product"; }


@*Form executes post method and looks for post action method of "Upsert"*@
<form method="post" enctype="multipart/form-data" asp-action="Upsert">

    @*If this is Create intent, there is no ID. IMPORTANT*@
    @if (Model.Product.Id != 0)

    {
        title = "Edit Product";
<input asp-for="Product.Id" hidden />//"hidden" solves an error, when we have a complex object in category. Test it.
}


    <div class="border p-3">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
    <div class="form-group row">
        <h2 class="text-info pl-3"> @title</h2>
        <div class="row">
            <div class="col-8">
                <div class="form-group row">
                    <div class="col-4">
                        <label asp-for="Product.Name"></label>
                    </div>
                    <div class="col-8">
                        <input asp-for="Product.Name" class="form-control" />
                        <span asp-validation-for="Product.Name" class="text-danger"></span>
                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-4">
                        <label asp-for="Product.Price"></label>
                    </div>
                    <div class="col-8">
                        <input asp-for="Product.Price" class="form-control" />
                        <span asp-validation-for="Product.Price" class="text-danger"></span>
                    </div>

                </div>

                <div class="form-group row">
                    <div class="col-4">
                        <label asp-for="Product.Description"></label>
                    </div>
                    <div class="col-8">
                        <input asp-for="Product.Description" class="form-control" />
                        <span asp-validation-for="Product.Description" class="text-danger"></span>
                    </div>

                </div>

                <div class="form-group row">
                    <div class="col-4">
                        Image
                    </div>
                    <div class="col-8">
                        <input type="file" name="files" id="uploadBox" multiple class="form-control" />
                    </div>

                </div>

                <div class="form-group row">
                    <div class="col-4">
                        <label asp-for="Product.CategoryId"></label>
                    </div>
                    <div class="col-8">
                        <select asp-for="Product.CategoryId" asp-items="@Model.CategorySelectList" class="form-control"><option disabled selected>--Select Category--</option></select>
                        <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                    </div>

                </div>
                <div class="form-group row">
                    <div class="col-8 offset-4 row">

                        <div class="col">
                            @if (Model.Product.Id != 0)
                            {
                                //  THEN Update
                <input type="submit" class=" btn btn-info w-100" value="Update" /> }
            else
            {
                // THEN Create
<input type="submit" onclick="return validateInput()" class=" btn btn-primary w-100" value="Create" />}
                        </div>
                        <div class="col">
                            <a asp-controller="Category" asp-action="Index" class="btn btn-success"><i class="fas fa-sign-out-alt"></i> &nbsp; Back</a>
                            @* If we're using views within same category, asp-controller="category" can be optional'  *@
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-4">
                @* Keep this empty *@
            </div>
        </div>
    </div>
    </div>
</form>

@*The below section adds the client side validation*@
@section Scripts{

    @{
                        <partial name="_ValidationScriptsPartial" /> }
    <script>
        function validateInput() {
            if (document.getElementById("uploadBox").value == "") {
                Swal.fire(
                    'Good job!',
                    'You clicked the button!',
                    'success'
                )
                return false;
            }
            return true;
        }
    </script>
}
